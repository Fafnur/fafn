@use '../../../src/styles/mixins/state-layer' as state-layer;

:host {
  user-select: none;
  overflow: hidden;
  height: 32px;
}

label {
  display: inline-flex;
  flex-direction: column;
  position: relative;
}

.fafn-control {
  display: flex;
  flex-flow: row;
  align-items: center;
  cursor: pointer;
  width: 52px;
  height: 32px;
  background-color: var(--md-sys-color-surface-container-highest);
  transition: 0.4s;
  border-radius: 32px;
  border: var(--md-sys-color-outline) solid 2px;

  .fafn-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--md-sys-color-outline);
    transition: 0.4s;
    width: 16px;
    height: 16px;
    border-radius: var(--md-sys-shape-corner-full);
    left: 4px;
    position: relative;
    font-size: 16px;

    &:is(.fafn-with-on, .fafn-with-off, .fafn-with-on-off) {
      color: var(--md-sys-color-surface-container-highest);
    }

    &.fafn-with-on {
      left: 4px;
    }

    &.fafn-with-off {
      width: 24px;
      height: 24px;
      left: 2px;
    }
    &.fafn-with-on-off {
      width: 24px;
      height: 24px;
      left: 2px;
    }
  }

  @include state-layer.add-state-layer();

  @include state-layer.add-state-hover() {
    .fafn-state-layer {
      background-color: var(--md-sys-color-on-surface);
    }

    .fafn-icon {
      background-color: var(--md-sys-color-on-surface-variant);
    }
  }
  @include state-layer.add-state-focus() {
    .fafn-state-layer {
      background-color: var(--md-sys-color-on-surface);
    }

    .fafn-icon {
      background-color: var(--md-sys-color-on-surface-variant);
    }
  }
  @include state-layer.add-state-active() {
    .fafn-state-layer {
      background-color: var(--md-sys-color-on-surface);
    }

    .fafn-icon {
      background-color: var(--md-sys-color-on-surface-variant);
    }
  }
  @include state-layer.add-state-disabled() {
    .fafn-state-layer {
      background-color: var(--md-sys-color-on-surface);
    }

    .fafn-icon {
      background-color: var(--md-sys-color-on-surface-variant);
    }
  }
}

input {
  opacity: 0;
  width: 0;
  height: 0;
  position: absolute;

  &:is([disabled], :checked[disabled]) + .fafn-control {
    cursor: not-allowed;
    border-color: rgba(var(--md-sys-color-on-surface-rgba), 0.12);
    background-color: rgba(var(--md-sys-color-surface-container-highest-rgba), 0.12);

    .fafn-icon {
      background-color: rgba(var(--md-sys-color-surface-container-highest-rgba), 0.38);
      color: rgba(var(--md-sys-color-on-surface-rgba), 0.38);
    }
  }

  &:checked + .fafn-control {
    background-color: var(--md-sys-color-primary);
    border-color: transparent;
    height: 32px;

    .fafn-icon {
      left: -4px;
      background-color: var(--md-sys-color-on-primary);

      &:is(.fafn-with-on, .fafn-with-off, .fafn-with-on-off) {
        color: var(--md-sys-color-on-primary-container);
      }

      &.fafn-with-on {
        width: 24px;
        height: 24px;
        left: -8px;
      }

      &.fafn-with-off {
        width: 16px;
        height: 16px;
        left: -4px;
      }

      &.fafn-with-on-off {
        left: -8px;
      }
    }

    &:is(&:hover, &.is-hovered, &:focus, &.is-focused, &:active, &.is-pressed) {
      .fafn-state-layer {
        background-color: var(--md-sys-color-primary);
      }

      .fafn-icon {
        background-color: var(--md-sys-color-primary-container);
      }
    }
  }
}
